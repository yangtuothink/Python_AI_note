整体流程

|-----------------------------------------------------------------------------------------------|
|浏览器                httpsever                                  webframe                       |
|请求       --->       sockfd1(服务端)                             sockfd(服务端)                 |
|                            ↓ (多线程接收请求)                        ↓ (select 接收请求)         |
|                            ↓ 整理解析 requset                       ↓                          |
|                            ↓                   (json)              ↓                          |
|                     sockfd2(客户端)             ---->            数据整理                       |
|                            ↓                                       ↓                          |
|                            ↓                   (data)              ↓                          |
|响应       <---        整理成响应                 <----            整合成 data 返回给 httpsever   |
|-----------------------------------------------------------------------------------------------|




功能
    HTTPserver 部分
        1. 获取 http 请求
        2. 解析 http 请求
        3. 将请求发送给 WebFrame
        4. 从 WebFrame 接收数据信息
        5. 将数据信息组织为 Response 发送给客户端

    WebFrame 部分
        1. 从 httpserver 获取具体请求
        2. 根据请求进行逻辑或者数据处理 (简单处理, 这里不会过分细致)
        3. 将数据资源发送给 httpserver

升级
   1. httpserver 与应用程序分离, 各自独立
   2. 独立开发, 降低互相干扰, 采用各自的配置模式
   3. 在后端应用程序中优化数据的处理模型 (暂时就先不做了)


目录结构
    HTTPServer
        httpserver.py           主体文件
        httpserver_config.py    配置文件
    WebFrame
        static/                 静态网页存放目录
        webframe.py             主体文件
        setting.py              配置文件
        view.py                 用户视图文件






